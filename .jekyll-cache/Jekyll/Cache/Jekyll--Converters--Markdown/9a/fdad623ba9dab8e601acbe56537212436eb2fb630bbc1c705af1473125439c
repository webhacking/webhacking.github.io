I"J%<p><img src="/assets/images/posts/682/215CAF4F577C716F3B2F79.JPEG" alt="" /></p>

<p>84page</p>

<blockquote>
  <p>오래 전에 작성했던 코드를 지금에 와서도 고칠 부분이 없어 보인다면, 그것은 그동안 배운 것이 없다는 뜻이다.</p>
</blockquote>

<p>1부 이념과 태도</p>

<p>1장 21세기의 소프트웨어 개발</p>

<p>고참 개발자</p>

<p>새로운 현실</p>

<p>2장 애자일</p>

<p>절차적인 관점에서의 애자일 원칙</p>

<p>기술적인 관점에서의 애자일 원칙</p>

<p>애자일을 따른다는 것</p>

<p>게임 체인저</p>

<p>피플 임파워먼트</p>

<p>프로페셔널의 진화</p>

<p>애자일 매니페스토</p>

<p>애자일 매니페스토의 원칙들</p>

<p>애자일 격변기</p>

<p>애자일 행오버</p>

<p>부분적인 전환</p>

<p>애자일 코치</p>

<p>새로운 기술적 실행 관례에 대한 거부감</p>

<p>소프트웨어 프로젝트를 바라보는 편협한 시각</p>

<p>나쁜 소식만 있는 것은 아니다</p>

<p>애자일과 소프트웨어 장인정신</p>

<p>요약</p>

<p>3장 소프트웨어 장인정신</p>

<p>더 나은 비유</p>

<p>위키피디아에서의 정의</p>

<p>좀더 주관적인 정의</p>

<p>짧은 정의</p>

<p>정의 이상의 의미</p>

<p>공예, 사업, 엔지니어링, 과학 또는 예술</p>

<p>소프트웨어 장인정신의 토론 이력</p>

<p>소프트웨어 장인정신 모임</p>

<p>경계를 지나</p>

<p>장인 교환 프로그램</p>

<p>소프트웨어 장인 커뮤니티</p>

<p>소프트웨어 장인정신 매니페스토</p>

<p>매니페스토</p>

<p>‘동작하는 소프트웨어뿐만 아니라, 정교하며 솜씨 있게 만들어진 작품을’</p>

<p>‘변화에 대응하는 것뿐 아니라, 계속해서 가치를 더하는 것을’</p>

<p>‘개별적으로 협력하는 것뿐만 아니라 프로페셔널 커뮤니티를 조성하는 것을’</p>

<p>‘고객과 협업하는 것뿐만 아니라, 생산적인 동반자 관계를’</p>

<p>생산적 동반자 관계가 될 준비가 안 된 고객</p>

<p>매니페스토의 문제점</p>

<p>요약</p>

<p>4장 소프트웨어 장인의 태도</p>

<p>내 커리어의 주인은 누구인가</p>

<p>고용자?피고용자 관계</p>

<p>끊임없는 자기계발</p>

<p>독서, 많은 독서</p>

<p>블로그</p>

<p>기술 웹사이트</p>

<p>팔로우할 리더 찾기</p>

<p>소셜미디어</p>

<p>끊임없는 훈련</p>

<p>카타</p>

<p>펫 프로젝트</p>

<p>오픈 소스</p>

<p>페어 프로그래밍</p>

<p>사회 활동: 다른 개발자들과 어울리기</p>

<p>‘개별적으로 협력하는 것뿐만 아니라, 프로페셔널 커뮤니티를 조성하는 것을’</p>

<p>의도한 발견</p>

<p>일과 삶의 균형</p>

<p>시간 만들기</p>

<p>집중: 뽀모도로 기법</p>

<p>균형</p>

<p>요약</p>

<p>5장 영웅, 선의 그리고 프로페셔널리즘</p>

<p>‘아니오’라고 말하는 방법 배우기</p>

<p>재앙의 기억</p>

<p>교훈</p>

<p>프로답게 행동하기</p>

<p>대안 제시</p>

<p>뜻밖의 실용적인 대안</p>

<p>깨어 있는 관리자</p>

<p>요약</p>

<p>6장 동작하는 소프트웨어</p>

<p>동작하는 소프트웨어만으로는 부족하다</p>

<p>정원 돌보기</p>

<p>보이지 않는 위협</p>

<p>자신이 만든 소프트웨어에 인질이 되는 상황</p>

<p>평범한 개발자가 아닌 장인을 고용하라</p>

<p>시간에 대한 잘못된 인식</p>

<p>기술적 부채에 대한 이야기</p>

<p>우리는 올바른 것을 하길 원한다</p>

<p>시간적 여유가 없는 바쁜 팀</p>

<p>내겐 없는 여유, 다른 누군가에겐 있는 여유</p>

<p>단위 테스트 작성은 별개의 업무인가</p>

<p>효율적인 시간 활용</p>

<p>몇 개월 후</p>

<p>레거시 코드</p>

<p>태도의 변화</p>

<p>고객과 개발자 모두의 만족</p>

<p>요약</p>

<p>7장 기술적 실행 관례</p>

<p>올바른 일 vs 올바른 실행</p>

<p>상황 논리</p>

<p>익스트림 프로그래밍의 역사</p>

<p>실행 관례와 가치</p>

<p>실행 관례를 통한 가치 창출</p>

<p>자동화된 테스트</p>

<p>테스트 먼저</p>

<p>테스트 주도 개발</p>

<p>지속가능한 통합</p>

<p>페어 프로그래밍</p>

<p>리펙토링</p>

<p>책임감</p>

<p>실용주의</p>

<p>요약</p>

<p>8장 길고 긴 여정</p>

<p>브라질 어느 십대 소년의 이야기</p>

<p>결단과 집중</p>

<p>어디로 가야 할지 모른다면</p>

<p>투자로서의 일터</p>

<p>당부의 말</p>

<p>자율성, 통달, 목적의식</p>

<p>회사 안에서의 커리어</p>

<p>요약</p>

<p>2부 완전한 전환</p>

<p>9장 인재 채용</p>

<p>전형적인 채용 공고</p>

<p>인터뷰할 시간이 없다는 변명</p>

<p>틀에 박힌 직무 요건</p>

<p>참고 정보로 필요한 직무 요건</p>

<p>일은 단순히 일이 아니다</p>

<p>추천 채용</p>

<p>커뮤니티의 활용</p>

<p>효과적인 선별 조건의 정의</p>

<p>적극적인 리쿠르팅</p>

<p>요약</p>

<p>10장 소프트웨어 장인 면접하기</p>

<p>비즈니스 협상</p>

<p>생산적인 파트너십을 알아보는 방법</p>

<p>회사 입장에서의 관점</p>

<p>지원자 입장에서의 관점</p>

<p>바람직한 면접 방법</p>

<p>올바른 집중</p>

<p>마인드 맵핑 대화</p>

<p>페어 프로그래밍 면접</p>

<p>개인 컴퓨터를 지참한 면접</p>

<p>맞춤형 면접</p>

<p>번트 홈런</p>

<p>기존 팀을 위한 채용, 새로운 팀을 위한 채용</p>

<p>사전 면접용 코딩 시험</p>

<p>지원자와 회사 모두 면접을 어떻게 하는지 알아야 한다</p>

<p>개발자 채용 면접은 개발자가 보아야 한다</p>

<p>요약</p>

<p>11장 잘못된 면접 방식</p>

<p>똑똑한 척하는 면접관을 세운다</p>

<p>수수께끼식 질문을 던진다</p>

<p>답을 모르는 질문을 한다</p>

<p>지원자를 바보로 만든다</p>

<p>인터넷 접속을 막는다</p>

<p>종이에 코드를 작성하게 한다</p>

<p>알고리즘 문제를 낸다</p>

<p>전화 면접을 한다</p>

<p>요약</p>

<p>12장 낮은 사기의 대가</p>

<p>애자일 행오버: 낮은 사기</p>

<p>그저 ‘출퇴근’만 하는 개발자들로 인한 대가</p>

<p>낮은 수준의 동기가 만드는 제약</p>

<p>개발자들에게 열정을 불어넣기</p>

<p>요약</p>

<p>13장 배움의 문화</p>

<p>잘못된 방향으로 동기 부여하기</p>

<p>배움의 문화 만들기</p>

<p>북 클럽에 가입하기</p>

<p>테크 런치 진행하기</p>

<p>그룹 토론회에 참여하기</p>

<p>업무 교환하기</p>

<p>얼마 동안만 업무 교환하기</p>

<p>그룹 코드 리뷰하기</p>

<p>코딩 실습하기</p>

<p>사용할 기술은 가능한 자유롭게 선택하기</p>

<p>내부 학습 모임을 만들기</p>

<p>회사에서의 펫 프로젝트 시간을 허용하기</p>

<p>외부 기술 커뮤니티와 교류하기</p>

<p>아무도 참여하려 하지 않는다면</p>

<p>모범을 보여라</p>

<p>관심을 보이는 사람들에게 집중하라</p>

<p>강제하지 마라</p>

<p>모두를 변화시키려 들지 말라</p>

<p>모임에 대한 약속을 제때하라</p>

<p>허락을 구하지 마라</p>

<p>투덜대지 마라</p>

<p>리듬을 만들라</p>

<p>요약</p>

<p>14장 기술적 변화의 실행</p>

<p>회의론의 종류</p>

<p>준비</p>

<p>기술적 변화를 시작하는 방법</p>

<p>신뢰를 쌓으라</p>

<p>전문성을 확보하라</p>

<p>모범을 보여 사람들을 이끌라</p>

<p>신중하게 싸울 곳을 정하라</p>

<p>점진적으로 반복, 관찰, 수용하라</p>

<p>두려움과 자신감 부족</p>

<p>상사를 설득하는 방법</p>

<p>팀이 TDD를 수용하도록 설득하는 방법</p>

<p>회의론을 상대하는 방법</p>

<p>상아탑 아키텍트</p>

<p>권한과 책임</p>

<p>피해망상</p>

<p>이 모든 것을 다 챙겨야만 하는가</p>

<p>요약</p>

<p>15장 실용주의 장인정신</p>

<p>품질은 선택사항이 아니다</p>

<p>좋은 품질은 비싸고 시간이 오래 걸릴까</p>

<p>테스트 주도 개발이 항상 필요할까</p>

<p>리펙토링</p>

<p>소프트웨어 개발 방법의 한 가지 예</p>

<p>비즈니스 돕기</p>

<p>단순하고 빠른 솔루션</p>

<p>소프트웨어 프로젝트는 우리를 위한 것이 아니다</p>

<p>비범함과 평범함</p>

<p>단순한 설계를 위한 네 가지 원칙</p>

<p>디자인 패턴</p>

<p>패턴을 위한 리펙토링</p>

<p>장인정신과 실용주의</p>

<p>요약</p>

<p>16장 소프트웨어 장인으로서의 커리어</p>

<p>장인의 길</p>

<p>정직과 용기</p>

<p>커리어의 진전</p>

<p>다른 커리어 사다리</p>

<p>여정과 이정표</p>

<p>커리어 만들어 나가기</p>

<p>원하는 바를 모른다면 어떻게 해야 할까</p>

<p>다양성</p>

<p>소프트웨어 장인의 사명</p>

<p>부록 소프트웨어 장인정신에 대한 오해와 설명</p>

<p>소프트웨어 장인과 소프트웨어 개발자</p>

<p>장인정신 != 엘리트주의</p>

<p>견습생, 숙련공, 마스터</p>

<p>마스터 장인</p>

<p>근시안적 개념으로 보는 시선</p>

<p>장인정신과 XP</p>

<p>실행 관례와의 관계</p>

<p>애자일 코치와 관리자</p>

<p>소프트웨어 도제 제도</p>

<p>비유로 인한 문제</p>

:ET